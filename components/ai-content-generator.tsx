'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Loader2, Sparkles, Plus, X } from 'lucide-react';
import { AIContentGenerator } from '@/lib/ai-content-generator';

export function AIContentGeneratorComponent() {
  const [keywords, setKeywords] = useState<string[]>([]);
  const [currentKeyword, setCurrentKeyword] = useState('');
  const [category, setCategory] = useState('GAMING');
  const [isGenerating, setIsGenerating] = useState(false);
  const [result, setResult] = useState<any>(null);

  const generator = new AIContentGenerator();

  const addKeyword = () => {
    if (currentKeyword.trim() && !keywords.includes(currentKeyword.trim())) {
      setKeywords([...keywords, currentKeyword.trim()]);
      setCurrentKeyword('');
    }
  };

  const removeKeyword = (keyword: string) => {
    setKeywords(keywords.filter(k => k !== keyword));
  };

  const handleGenerate = async () => {
    if (keywords.length === 0) return;

    setIsGenerating(true);
    setResult(null);
    
    try {
      console.log('Starting generation with keywords:', keywords);
      const content = await generator.generateFromKeywords(keywords, category);
      console.log('Generated content:', content);
      setResult(content);
    } catch (error) {
      console.error('Generation failed:', error);
      setResult({ title: 'Error', content: `Failed: ${error}` });
    } finally {
      setIsGenerating(false);
    }
  };

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Sparkles className="h-5 w-5" />
            Llama 4 Maverick 17B Content Generator
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex gap-2">
            <Input
              placeholder="Enter keyword (e.g., 'gaming', 'AI', 'technology')"
              value={currentKeyword}
              onChange={(e) => setCurrentKeyword(e.target.value)}
              onKeyPress={(e) => e.key === 'Enter' && addKeyword()}
              className="flex-1"
            />
            <Button onClick={addKeyword} variant="outline" size="icon">
              <Plus className="h-4 w-4" />
            </Button>
          </div>

          {keywords.length > 0 && (
            <div className="flex flex-wrap gap-2">
              {keywords.map((keyword) => (
                <Badge key={keyword} variant="secondary" className="flex items-center gap-1">
                  {keyword}
                  <X 
                    className="h-3 w-3 cursor-pointer" 
                    onClick={() => removeKeyword(keyword)}
                  />
                </Badge>
              ))}
            </div>
          )}

          <div className="flex gap-4">
            <Select value={category} onValueChange={setCategory}>
              <SelectTrigger className="w-48">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="GAMING">Gaming</SelectItem>
                <SelectItem value="TECH">Technology</SelectItem>
                <SelectItem value="ANIME_MANGA">Anime & Manga</SelectItem>
                <SelectItem value="REVIEWS">Reviews</SelectItem>
                <SelectItem value="GUIDES">Guides</SelectItem>
              </SelectContent>
            </Select>
            <Button 
              onClick={handleGenerate} 
              disabled={keywords.length === 0 || isGenerating}
              className="flex-1"
            >
              {isGenerating ? (
                <>
                  <Loader2 className="h-4 w-4 animate-spin mr-2" />
                  Llama is researching & generating...
                </>
              ) : (
                'Generate Article with Llama 4'
              )}
            </Button>
          </div>
        </CardContent>
      </Card>

      {result && (
        <Card>
          <CardHeader>
            <CardTitle>Generated by Llama 4 Maverick 17B</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div>
                <h3 className="font-semibold">Title:</h3>
                <p>{result.title}</p>
              </div>
              <div>
                <h3 className="font-semibold">Meta Description:</h3>
                <p className="text-sm text-gray-600">{result.metaDescription}</p>
              </div>
              <div>
                <h3 className="font-semibold">Tags:</h3>
                <p className="text-sm">{result.tags?.join(', ')}</p>
              </div>
              <div>
                <h3 className="font-semibold">Status:</h3>
                <p className="text-green-600">Article created successfully by Llama 4 Maverick 17B!</p>
              </div>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}